from Model.Repository.AlbumRepository import AlbumRepository
from Model.Models.Album import Album
from Model.DTO.AlbumDTO import AlbumDTO
from Model.Models.MuzickoDelo import MuzickoDelo

class AlbumController():
    def __init__(self, musical_piece_controller) -> None:
        self.album_repository = AlbumRepository(musical_piece_controller)
        self.musical_piece_controller = musical_piece_controller
    
    def add_album(self, album_dto: AlbumDTO):
        muzicka_dela_ids = [md.id for md in album_dto.muzicka_dela]
        new_album = Album(
            0,  # ID will be generated by the repository
            album_dto.naziv,
            album_dto.slika,
            album_dto.pregledi,
            album_dto.broj_ocena,
            album_dto.zbir_ocena,
            [self.musical_piece_controller.get_by_id(md_id) for md_id in muzicka_dela_ids]
        )
        added_album = self.album_repository.add_album(new_album)
        return added_album
    
    def load(self):
        return self.album_repository.load()
    
    def delete_album(self, naziv: str):
        return self.album_repository.delete_album(naziv)
    
    def convert_DTO_to_model(self, album_dto):
        if isinstance(album_dto, AlbumDTO):
            muzicka_dela = [self.musical_piece_controller.get_by_id(md.id) for md in album_dto.muzicka_dela]
            return Album(
                album_dto.id,
                album_dto.naziv,
                album_dto.slika,
                album_dto.pregledi,
                album_dto.broj_ocena,
                album_dto.zbir_ocena,
                muzicka_dela
            )
    
    def get_all_albums(self):
        return self.album_repository.get_all_albums()

    def get_by_naziv(self, naziv: str):
        return self.album_repository.get_by_naziv(naziv)
